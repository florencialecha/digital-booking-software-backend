[2023-02-16 16:09:11] [ DEBUG] [logging:38] Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2023-02-16 16:09:11] [ DEBUG] [LogHelper:102] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@4b1210ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/P:/dh/proyectoIntegrador/grupo-06/backend/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.digitalbooking.backend.entity.Category]
	Mapping files names []
	Properties []
[2023-02-16 16:09:11] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2023-02-16 16:09:11] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2023-02-16 16:09:11] [ INFO ] [Version:44] HHH000412: Hibernate ORM core version 6.1.6.Final
[2023-02-16 16:09:11] [ DEBUG] [Environment:163] HHH000206: hibernate.properties not found
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:09:12] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2023-02-16 16:09:12] [ WARN ] [deprecation:626] HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
[2023-02-16 16:09:12] [ DEBUG] [RegionFactoryInitiator:117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2023-02-16 16:09:12] [ DEBUG] [RegionFactoryInitiator:49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2023-02-16 16:09:12] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ef4f627
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ef4f627
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4ef4f627
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4ea56bdb
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4ea56bdb
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@32227215
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@32227215
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@108e9837
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@108e9837
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:09:12] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration image -> org.hibernate.type.BasicTypeReference@59845579
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration blob -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration integer -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration int -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration string -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration text -> org.hibernate.type.BasicTypeReference@d3e3085
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2ba42204
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration clob -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27585351
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2de6f1bc
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b35c7d
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@29d405e6
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4c731956
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@56826a75
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49cd946c
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49cd946c
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@40bf4386
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@40bf4386
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@14d25b6e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@14d25b6e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@51c65a43
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@51c65a43
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@740dcae3
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@740dcae3
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f726750
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e80a001
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration date -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration time -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@577bf0aa
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@577bf0aa
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@577bf0aa
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7455dacb
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration instant -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@52bd9a27
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration class -> org.hibernate.type.BasicTypeReference@611e5819
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@611e5819
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration currency -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration locale -> org.hibernate.type.BasicTypeReference@7459a21e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7459a21e
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7eeb38b2
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7eeb38b2
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@d54d0f5
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@d54d0f5
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6d6bff89
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6d6bff89
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration url -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@739265f1
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@72028a45
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@72028a45
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:372] Adding type registration object -> org.hibernate.type.JavaObjectType@3c19592c
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3c19592c
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:372] Adding type registration null -> org.hibernate.type.NullType@49edcb30
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@59303963
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61e86192
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@34330f77
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1320e68a
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4b033eac
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@69c532af
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@45a1d057
[2023-02-16 16:09:13] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@51a16adf
[2023-02-16 16:09:13] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@230a73f2] into BootstrapContext; was [null]
[2023-02-16 16:09:13] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@230a73f2) [was null]
[2023-02-16 16:09:13] [ DEBUG] [BootstrapContextImpl:293] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7f97bc14] into BootstrapContext; was [null]
[2023-02-16 16:09:13] [ DEBUG] [BootstrapContextImpl:288] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@22d8f4ed] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3434a4f0]
[2023-02-16 16:09:13] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@230a73f2]
[2023-02-16 16:09:13] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@230a73f2]
[2023-02-16 16:09:14] [ DEBUG] [JdbcEnvironmentInitiator:181] Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:09:14] [ DEBUG] [JdbcEnvironmentInitiator:192] Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:09:14] [ DEBUG] [JdbcEnvironmentInitiator:389] JDBC version : 4.2
[2023-02-16 16:09:14] [ INFO ] [SQL dialect:66] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2023-02-16 16:09:14] [ DEBUG] [IdentifierHelperBuilder:116] JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2023-02-16 16:09:14] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[2023-02-16 16:09:14] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[2023-02-16 16:09:14] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[2023-02-16 16:09:14] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:09:14] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:09:14] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[2023-02-16 16:09:14] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:09:14] [ DEBUG] [BasicTypeRegistry:372] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:09:14] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:09:14] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:09:14] [ DEBUG] [BasicTypeRegistry:372] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:09:14] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:09:14] [ DEBUG] [TypeConfiguration$Scope:166] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dcf0772] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c472300]
[2023-02-16 16:09:14] [ DEBUG] [Namespace:53] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2023-02-16 16:09:14] [ DEBUG] [EntityBinder:205] Binding entity from annotated class: com.digitalbooking.backend.entity.Category
[2023-02-16 16:09:14] [ DEBUG] [AnnotatedColumn:265] Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2023-02-16 16:09:14] [ DEBUG] [EntityBinder:1223] Import with entity name Category
[2023-02-16 16:09:14] [ DEBUG] [EntityBinder:1723] Bind entity com.digitalbooking.backend.entity.Category on table categories
[2023-02-16 16:09:15] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2023-02-16 16:09:15] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:09:15] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property id with lazy=false
[2023-02-16 16:09:15] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:id]
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1081] building BasicValue for id
[2023-02-16 16:09:15] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.id
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:310] Building property id
[2023-02-16 16:09:15] [ DEBUG] [BinderHelper:726] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[2023-02-16 16:09:15] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property description with lazy=false
[2023-02-16 16:09:15] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:description]
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1081] building BasicValue for description
[2023-02-16 16:09:15] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.description
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:310] Building property description
[2023-02-16 16:09:15] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=image_url, insertable=true, updatable=true, unique=false}
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property imageUrl with lazy=false
[2023-02-16 16:09:15] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:imageUrl]
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1081] building BasicValue for imageUrl
[2023-02-16 16:09:15] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.image_url
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:310] Building property imageUrl
[2023-02-16 16:09:15] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property title with lazy=false
[2023-02-16 16:09:15] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:title]
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1081] building BasicValue for title
[2023-02-16 16:09:15] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.title
[2023-02-16 16:09:15] [ DEBUG] [PropertyBinder:310] Building property title
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for id
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for description
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for imageUrl
[2023-02-16 16:09:15] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for title
[2023-02-16 16:09:15] [ DEBUG] [PrimaryKey:35] Forcing column [id] to be non-null as it is part of the primary key for table [categories]
[2023-02-16 16:09:15] [ DEBUG] [SessionFactoryImpl:199] Building session factory
[2023-02-16 16:09:15] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:09:15] [ DEBUG] [SessionFactoryImpl:265] Session factory constructed with filter configurations : {}
[2023-02-16 16:09:15] [ DEBUG] [SessionFactoryImpl:266] Instantiating session factory with properties: {java.specification.version=19, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5cffec7, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=P:\dh\proyectoIntegrador\grupo-06\backend\target\classes;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.1\spring-boot-starter-web-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\59898\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\59898\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\59898\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\59898\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\59898\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\59898\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\59898\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\59898\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\59898\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\59898\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\59898\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\59898\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\59898\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\59898\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\59898\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\59898\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\59898\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\59898\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.2\spring-boot-starter-security-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-config\6.0.1\spring-security-config-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-web\6.0.1\spring-security-web-6.0.1.jar;C:\Users\59898\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\59898\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\59898\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\59898\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\59898\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-core\6.0.1\spring-security-core-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-crypto\6.0.1\spring-security-crypto-6.0.1.jar;C:\Users\59898\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=America/Montevideo, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=19, os.name=Windows 10, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=UY, sun.boot.library.path=C:\Program Files\Java\jdk-19\bin, sun.java.command=com.digitalbooking.backend.BackendApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7e81617a, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\59898, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=C:\Program Files\Java\jdk-19, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=59898, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\59898\AppData\Local\Temp\, catalina.home=C:\Users\59898\AppData\Local\Temp\tomcat.8080.4285627297268742351, java.version=19.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=P:\dh\proyectoIntegrador\grupo-06\backend, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=9872, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\59898\AppData\Local\Temp\tomcat.8080.4285627297268742351, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6e73974, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\HashiCorp\Vagrant\bin;C:\Program Files\PuTTY\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\59898\AppData\Local\Microsoft\WindowsApps;;C:\Users\59898\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\59898\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2\bin;;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=63.0}
[2023-02-16 16:09:15] [ DEBUG] [SessionFactoryImpl:303] Instantiated session factory
[2023-02-16 16:09:15] [ DEBUG] [cache:48] Starting QueryPlanCache(2048)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@347123dc] under count; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@10745a02] under every; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3e2d8623] under any; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : length -> character_length
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@29d2fa84] under position; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@15f861ee] under overlay; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1c6ac73c] under trim; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1a7e799e] under cast; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48e74764] under collate; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@55071497] under extract; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5f6e2ad9] under ifnull; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1d1cfe4] under pad; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@42211e04] under str; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2a667f44] under format; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7858d31d] under timestampadd; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@20be890d] under timestampdiff; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : dateadd -> timestampadd
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : datediff -> timestampdiff
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@38e00b47] under current_date; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a631049] under current_time; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@425b5fe2] under current_timestamp; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current date -> current_date
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current time -> current_time
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current timestamp -> current_timestamp
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3eec8583] under local_date; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@66e1b2a] under local_time; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@343db2f6] under local_datetime; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c815fdc] under offset_datetime; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local date -> local_date
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local time -> local_time
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local datetime -> local_datetime
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : offset datetime -> offset_datetime
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@769b0752] under instant; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current_instant -> instant
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@517fbf62] under sql; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@65db548] under count; prior registration was org.hibernate.dialect.function.CountFunction@347123dc
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@298263fa] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : day -> day_of_month
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@66e1b2a
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@343db2f6
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : chr -> char
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@466fedfa] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@29d2fa84
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a7d0c9f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : every -> bool_and
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : any -> bool_or
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b1a901d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2a667f44
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7417ef4f] under listagg; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3e98b933] under mode; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@222d9d4f] under percentile_cont; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4269aad7] under percentile_disc; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@305e95a4] under rank; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@55e42684] under dense_rank; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@18d610e1] under percent_rank; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@528e5e38] under cume_dist; prior registration was null
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] abs(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double acos(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer ascii(STRING arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double asin(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double atan(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double atan2(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double avg(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] bit_and(arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer bit_length(STRING_OR_CLOB arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] bit_or(arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] bitand(arg0, arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] bitor(arg0, arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] bitxor(arg0, arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_and(BOOLEAN predicate)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_or(BOOLEAN predicate)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] cast(arg as Type)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] ceiling(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Character char(INTEGER arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer character_length(STRING_OR_CLOB arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] coalesce(arg0[, arg1[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String collate(STRING string as COLLATION collation)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String concat(STRING string0[, STRING string1[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double cos(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double cot(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Long count([distinct ]{arg|*})
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double cume_dist([arg0[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Date curdate()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Date current_date
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Time current_time
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current_timestamp
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Time curtime()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_month(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_week(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_year(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String dayname(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double degrees(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Long dense_rank([arg0[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double exp(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] first_valueANY value
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] floor(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String format(TEMPORAL datetime as STRING pattern)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer hour(TIME arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] ifnull(arg0, arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Instant instant
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] lagANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] last_valueANY value
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] leadANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String left(STRING string, INTEGER length)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String listagg(STRING arg0, STRING arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double ln(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local_date
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local_datetime
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local_time
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Time localtime
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp localtimestamp
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer locate(STRING pattern, STRING string[, INTEGER start])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double log10(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String lower(STRING string)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String lpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String ltrim(STRING string)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] max(COMPARABLE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double median(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer microsecond(TIME arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] min(COMPARABLE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer minute(TIME arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer mod(INTEGER arg0, INTEGER arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] mode()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer month(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String monthname(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp now()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] nth_valueANY value, INTEGER nth
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] nullif(arg0, arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer octet_length(STRING_OR_CLOB arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset_datetime
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double percent_rank([arg0[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] percentile_cont(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] percentile_disc(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double pi()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer position(STRING pattern in STRING string)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double power(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer quarter(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double radians(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double rand([INTEGER seed])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Long rank([arg0[, ...]])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String repeat(STRING string, INTEGER times)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String replace(STRING string, STRING pattern, STRING replacement)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String right(STRING string, INTEGER length)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] round(NUMERIC arg0, INTEGER arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Long row_number()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Long rownum()
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String rpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String rtrim(STRING string)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer second(TIME arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer sign(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double sin(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String soundex(arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String space(INTEGER arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Object sql
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double sqrt(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_pop(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_samp(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String str(arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String substr(STRING string, INTEGER start[, INTEGER length])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] sum(arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp sysdate
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double tan(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String translate(STRING arg0, STRING arg1, STRING arg2)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double truncate(NUMERIC number, INTEGER places)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] String upper(STRING string)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double var_pop(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Double var_samp(NUMERIC arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer week(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer year(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN predicate)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Character chr(INTEGER arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Date current date
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Time current time
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current timestamp
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Instant current_instant
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN predicate)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] Integer length(STRING_OR_CLOB arg)
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local date
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local datetime
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local time
[2023-02-16 16:09:15] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset datetime
[2023-02-16 16:09:15] [ DEBUG] [TypeConfiguration$Scope:171] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5dcf0772] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1760e594]
[2023-02-16 16:09:16] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:09:16] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:09:16] [ DEBUG] [creation:94] Starting post-init callbacks
[2023-02-16 16:09:16] [ DEBUG] [creation:206] Starting PostInitCallbackEntry : Entity(com.digitalbooking.backend.entity.Category) `staticFetchableList` generator
[2023-02-16 16:09:16] [ DEBUG] [AbstractEntityPersister:4159] Static SQL for entity: com.digitalbooking.backend.entity.Category
[2023-02-16 16:09:16] [ DEBUG] [AbstractEntityPersister:4164]  Version select: select id from categories where id =?
[2023-02-16 16:09:16] [ DEBUG] [AbstractEntityPersister:394]  Insert 0: insert into categories (description, image_url, title, id) values (?, ?, ?, ?)
[2023-02-16 16:09:16] [ DEBUG] [AbstractEntityPersister:394]  Update 0: update categories set description=?, image_url=?, title=? where id=?
[2023-02-16 16:09:16] [ DEBUG] [AbstractEntityPersister:394]  Delete 0: delete from categories where id=?
[2023-02-16 16:09:16] [ DEBUG] [AbstractEntityPersister:4172]  Identity insert: insert into categories (id, description, image_url, title) values (default, ?, ?, ?)
[2023-02-16 16:09:16] [ DEBUG] [create:34] Created new SQL alias : c1_0
[2023-02-16 16:09:16] [ DEBUG] [create:55] Registration of TableGroup [StandardTableGroup(com.digitalbooking.backend.entity.Category)] with identifierForTableGroup [com.digitalbooking.backend.entity.Category] for NavigablePath [com.digitalbooking.backend.entity.Category] 
[2023-02-16 16:09:16] [ DEBUG] [AST:69] DomainResult Graph:
 \-EntityResultImpl [com.digitalbooking.backend.entity.Category]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.description]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.imageUrl]
 |  \-BasicFetch [com.digitalbooking.backend.entity.Category.title]

[2023-02-16 16:09:16] [ DEBUG] [tree:47] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : com.digitalbooking.backend.entity.Category) {
          primaryTableReference : categories as c1_0
        }
      }
    }

[2023-02-16 16:09:16] [ DEBUG] [NamedObjectRepository:217] Checking 0 named HQL queries
[2023-02-16 16:09:16] [ DEBUG] [NamedObjectRepository:234] Checking 0 named SQL queries
[2023-02-16 16:09:16] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:09:16] [ DEBUG] [SQL:128] create table categories (id bigint generated by default as identity, description varchar(255), image_url varchar(255), title varchar(255), primary key (id))
[2023-02-16 16:09:17] [ INFO ] [JtaPlatformInitiator:51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-02-16 16:09:17] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:09:17] [ DEBUG] [EntityCopyObserverFactoryInitiator:39] Configured EntityCopyObserver strategy: disallow
[2023-02-16 16:09:17] [ DEBUG] [SessionFactoryRegistry:52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@74badf19
[2023-02-16 16:09:17] [ DEBUG] [SessionFactoryRegistry:74] Registering SessionFactory: c2ef7cba-7749-471c-b3a3-8385ff41e2f9 (<unnamed>)
[2023-02-16 16:09:17] [ DEBUG] [SessionFactoryRegistry:81] Not binding SessionFactory to JNDI, no JNDI name configured
[2023-02-16 16:09:17] [ DEBUG] [SessionFactoryImpl:770] HHH000031: Closing
[2023-02-16 16:09:17] [ INFO ] [SchemaDropperImpl$DelayedDropActionImpl:585] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[2023-02-16 16:09:17] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:09:17] [ DEBUG] [TypeConfiguration$Scope:474] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45cb5307] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1760e594]
[2023-02-16 16:09:17] [ DEBUG] [AbstractServiceRegistryImpl:403] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2023-02-16 16:09:17] [ DEBUG] [BootstrapServiceRegistryImpl:296] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2023-02-16 16:18:39] [ DEBUG] [logging:38] Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2023-02-16 16:18:39] [ DEBUG] [LogHelper:102] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@4b1210ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/P:/dh/proyectoIntegrador/grupo-06/backend/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.digitalbooking.backend.entity.Category]
	Mapping files names []
	Properties []
[2023-02-16 16:18:39] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2023-02-16 16:18:39] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2023-02-16 16:18:39] [ INFO ] [Version:44] HHH000412: Hibernate ORM core version 6.1.6.Final
[2023-02-16 16:18:39] [ DEBUG] [Environment:163] HHH000206: hibernate.properties not found
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:18:39] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2023-02-16 16:18:39] [ WARN ] [deprecation:626] HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
[2023-02-16 16:18:39] [ DEBUG] [RegionFactoryInitiator:117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2023-02-16 16:18:39] [ DEBUG] [RegionFactoryInitiator:49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2023-02-16 16:18:40] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7fe07361
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7fe07361
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7fe07361
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@741ac284
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@741ac284
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4ef4f627
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4ef4f627
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4ea56bdb
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4ea56bdb
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@32227215
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@32227215
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@32227215
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary -> org.hibernate.type.BasicTypeReference@108e9837
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@108e9837
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [B -> org.hibernate.type.BasicTypeReference@108e9837
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration image -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration blob -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@59845579
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration integer -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration int -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration string -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration characters -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [C -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration text -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration clob -> org.hibernate.type.BasicTypeReference@d3e3085
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@d3e3085
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2ba42204
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2ba42204
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@27585351
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2de6f1bc
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5b35c7d
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@29d405e6
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4c731956
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4c731956
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56826a75
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56826a75
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@49cd946c
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@49cd946c
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40bf4386
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40bf4386
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@14d25b6e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@14d25b6e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@51c65a43
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@740dcae3
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration date -> org.hibernate.type.BasicTypeReference@5f726750
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5f726750
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration time -> org.hibernate.type.BasicTypeReference@4e80a001
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4e80a001
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@577bf0aa
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration instant -> org.hibernate.type.BasicTypeReference@7455dacb
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7455dacb
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration class -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration currency -> org.hibernate.type.BasicTypeReference@4d98e41b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4d98e41b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4d98e41b
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration locale -> org.hibernate.type.BasicTypeReference@5ed5b321
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5ed5b321
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7459a21e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7459a21e
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7eeb38b2
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7eeb38b2
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration url -> org.hibernate.type.BasicTypeReference@d54d0f5
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@d54d0f5
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6d6bff89
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c1e14f
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c1e14f
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:372] Adding type registration object -> org.hibernate.type.JavaObjectType@741741d0
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@741741d0
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:372] Adding type registration null -> org.hibernate.type.NullType@647b9364
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@b6bccb4
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@49edcb30
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@59303963
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@61e86192
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@34330f77
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1320e68a
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b033eac
[2023-02-16 16:18:40] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@69c532af
[2023-02-16 16:18:40] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5b251fb9] into BootstrapContext; was [null]
[2023-02-16 16:18:40] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5b251fb9) [was null]
[2023-02-16 16:18:40] [ DEBUG] [BootstrapContextImpl:293] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@798deee8] into BootstrapContext; was [null]
[2023-02-16 16:18:40] [ DEBUG] [BootstrapContextImpl:288] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@96897c8] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7f97bc14]
[2023-02-16 16:18:40] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5b251fb9]
[2023-02-16 16:18:40] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5b251fb9]
[2023-02-16 16:18:40] [ DEBUG] [JdbcEnvironmentInitiator:181] Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:18:40] [ DEBUG] [JdbcEnvironmentInitiator:192] Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:18:40] [ DEBUG] [JdbcEnvironmentInitiator:389] JDBC version : 4.2
[2023-02-16 16:18:40] [ INFO ] [SQL dialect:66] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2023-02-16 16:18:41] [ DEBUG] [IdentifierHelperBuilder:116] JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2023-02-16 16:18:41] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[2023-02-16 16:18:41] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[2023-02-16 16:18:41] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[2023-02-16 16:18:41] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:18:41] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:18:41] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[2023-02-16 16:18:41] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:18:41] [ DEBUG] [BasicTypeRegistry:372] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:18:41] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:18:41] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:18:41] [ DEBUG] [BasicTypeRegistry:372] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:18:41] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:18:41] [ DEBUG] [TypeConfiguration$Scope:166] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dac2e1b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@38c761e9]
[2023-02-16 16:18:41] [ DEBUG] [Namespace:53] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2023-02-16 16:18:41] [ DEBUG] [EntityBinder:205] Binding entity from annotated class: com.digitalbooking.backend.entity.Category
[2023-02-16 16:18:41] [ DEBUG] [AnnotatedColumn:265] Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2023-02-16 16:18:41] [ DEBUG] [EntityBinder:1223] Import with entity name Category
[2023-02-16 16:18:41] [ DEBUG] [EntityBinder:1723] Bind entity com.digitalbooking.backend.entity.Category on table categories
[2023-02-16 16:18:41] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2023-02-16 16:18:41] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:18:41] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property id with lazy=false
[2023-02-16 16:18:41] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:id]
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1081] building BasicValue for id
[2023-02-16 16:18:41] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.id
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:310] Building property id
[2023-02-16 16:18:41] [ DEBUG] [BinderHelper:726] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[2023-02-16 16:18:41] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property description with lazy=false
[2023-02-16 16:18:41] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:description]
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1081] building BasicValue for description
[2023-02-16 16:18:41] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.description
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:310] Building property description
[2023-02-16 16:18:41] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=image_url, insertable=true, updatable=true, unique=false}
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property imageUrl with lazy=false
[2023-02-16 16:18:41] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:imageUrl]
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1081] building BasicValue for imageUrl
[2023-02-16 16:18:41] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.image_url
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:310] Building property imageUrl
[2023-02-16 16:18:41] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property title with lazy=false
[2023-02-16 16:18:41] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:title]
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1081] building BasicValue for title
[2023-02-16 16:18:41] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.title
[2023-02-16 16:18:41] [ DEBUG] [PropertyBinder:310] Building property title
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for id
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for description
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for imageUrl
[2023-02-16 16:18:41] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for title
[2023-02-16 16:18:41] [ DEBUG] [PrimaryKey:35] Forcing column [id] to be non-null as it is part of the primary key for table [categories]
[2023-02-16 16:18:41] [ DEBUG] [SessionFactoryImpl:199] Building session factory
[2023-02-16 16:18:41] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:18:41] [ DEBUG] [SessionFactoryImpl:265] Session factory constructed with filter configurations : {}
[2023-02-16 16:18:41] [ DEBUG] [SessionFactoryImpl:266] Instantiating session factory with properties: {java.specification.version=19, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6be766d1, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=P:\dh\proyectoIntegrador\grupo-06\backend\target\classes;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.1\spring-boot-starter-web-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\59898\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\59898\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\59898\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\59898\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\59898\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\59898\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\59898\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\59898\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\59898\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\59898\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\59898\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\59898\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\59898\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\59898\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\59898\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\59898\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\59898\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\59898\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.2\spring-boot-starter-security-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-config\6.0.1\spring-security-config-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-web\6.0.1\spring-security-web-6.0.1.jar;C:\Users\59898\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\59898\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\59898\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\59898\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\59898\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-core\6.0.1\spring-security-core-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-crypto\6.0.1\spring-security-crypto-6.0.1.jar;C:\Users\59898\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=America/Montevideo, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=19, os.name=Windows 10, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=UY, sun.boot.library.path=C:\Program Files\Java\jdk-19\bin, sun.java.command=com.digitalbooking.backend.BackendApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7adae08e, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\59898, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=C:\Program Files\Java\jdk-19, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=59898, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\59898\AppData\Local\Temp\, catalina.home=C:\Users\59898\AppData\Local\Temp\tomcat.8080.14084326129327842454, java.version=19.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=P:\dh\proyectoIntegrador\grupo-06\backend, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11732, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\59898\AppData\Local\Temp\tomcat.8080.14084326129327842454, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@49c83262, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\HashiCorp\Vagrant\bin;C:\Program Files\PuTTY\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\59898\AppData\Local\Microsoft\WindowsApps;;C:\Users\59898\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\59898\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2\bin;;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=63.0}
[2023-02-16 16:18:41] [ DEBUG] [SessionFactoryImpl:303] Instantiated session factory
[2023-02-16 16:18:41] [ DEBUG] [cache:48] Starting QueryPlanCache(2048)
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@10745a02] under count; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@75dc1c1c] under every; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5611bba] under any; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[2023-02-16 16:18:41] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : length -> character_length
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1c6ac73c] under position; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@ac4e690] under overlay; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@37a3ec27] under trim; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4537880f] under cast; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5f6e2ad9] under collate; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1d1cfe4] under extract; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@42211e04] under ifnull; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@34cb0e49] under pad; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3f6f9cef] under str; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@cae2a97] under format; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5db9f51f] under timestampadd; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@66e1b2a] under timestampdiff; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : dateadd -> timestampadd
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : datediff -> timestampdiff
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@dae5e0] under current_date; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59a94d0f] under current_time; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ff09659] under current_timestamp; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current date -> current_date
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current time -> current_time
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current timestamp -> current_timestamp
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@517fbf62] under local_date; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65db548] under local_time; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@150f41b9] under local_datetime; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e364f1f] under offset_datetime; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local date -> local_date
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local time -> local_time
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local datetime -> local_datetime
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : offset datetime -> offset_datetime
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@429e7914] under instant; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current_instant -> instant
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2b1a901d] under sql; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@11bdab37] under count; prior registration was org.hibernate.dialect.function.CountFunction@10745a02
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@59127611] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : day -> day_of_month
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@65db548
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@150f41b9
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : chr -> char
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@553ce348] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1c6ac73c
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7417ef4f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : every -> bool_and
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : any -> bool_or
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5c0e2ec] under format; prior registration was org.hibernate.dialect.function.FormatFunction@cae2a97
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4269aad7] under listagg; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18d610e1] under mode; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@528e5e38] under percentile_cont; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16391278] under percentile_disc; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@34cf0e80] under rank; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@38ef1a0a] under dense_rank; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@56f9de3b] under percent_rank; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6728370a] under cume_dist; prior registration was null
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] abs(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double acos(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer ascii(STRING arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double asin(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double atan(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double atan2(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double avg(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] bit_and(arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer bit_length(STRING_OR_CLOB arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] bit_or(arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] bitand(arg0, arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] bitor(arg0, arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] bitxor(arg0, arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_and(BOOLEAN predicate)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_or(BOOLEAN predicate)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] cast(arg as Type)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] ceiling(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Character char(INTEGER arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer character_length(STRING_OR_CLOB arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] coalesce(arg0[, arg1[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String collate(STRING string as COLLATION collation)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String concat(STRING string0[, STRING string1[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double cos(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double cot(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Long count([distinct ]{arg|*})
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double cume_dist([arg0[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Date curdate()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Date current_date
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Time current_time
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current_timestamp
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Time curtime()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_month(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_week(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_year(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String dayname(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double degrees(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Long dense_rank([arg0[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double exp(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] first_valueANY value
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] floor(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String format(TEMPORAL datetime as STRING pattern)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer hour(TIME arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] ifnull(arg0, arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Instant instant
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] lagANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] last_valueANY value
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] leadANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String left(STRING string, INTEGER length)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String listagg(STRING arg0, STRING arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double ln(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local_date
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local_datetime
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local_time
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Time localtime
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp localtimestamp
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer locate(STRING pattern, STRING string[, INTEGER start])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double log10(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String lower(STRING string)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String lpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String ltrim(STRING string)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] max(COMPARABLE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double median(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer microsecond(TIME arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] min(COMPARABLE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer minute(TIME arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer mod(INTEGER arg0, INTEGER arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] mode()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer month(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String monthname(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp now()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] nth_valueANY value, INTEGER nth
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] nullif(arg0, arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer octet_length(STRING_OR_CLOB arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset_datetime
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double percent_rank([arg0[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] percentile_cont(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] percentile_disc(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double pi()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer position(STRING pattern in STRING string)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double power(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer quarter(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double radians(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double rand([INTEGER seed])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Long rank([arg0[, ...]])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String repeat(STRING string, INTEGER times)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String replace(STRING string, STRING pattern, STRING replacement)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String right(STRING string, INTEGER length)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] round(NUMERIC arg0, INTEGER arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Long row_number()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Long rownum()
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String rpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String rtrim(STRING string)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer second(TIME arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer sign(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double sin(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String soundex(arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String space(INTEGER arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Object sql
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double sqrt(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_pop(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_samp(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String str(arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String substr(STRING string, INTEGER start[, INTEGER length])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] sum(arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp sysdate
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double tan(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String translate(STRING arg0, STRING arg1, STRING arg2)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double truncate(NUMERIC number, INTEGER places)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] String upper(STRING string)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double var_pop(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Double var_samp(NUMERIC arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer week(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer year(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN predicate)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Character chr(INTEGER arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Date current date
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Time current time
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current timestamp
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Instant current_instant
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN predicate)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] Integer length(STRING_OR_CLOB arg)
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local date
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local datetime
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local time
[2023-02-16 16:18:42] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset datetime
[2023-02-16 16:18:42] [ DEBUG] [TypeConfiguration$Scope:171] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2dac2e1b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@224e6e88]
[2023-02-16 16:18:42] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:18:42] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:18:43] [ DEBUG] [creation:94] Starting post-init callbacks
[2023-02-16 16:18:43] [ DEBUG] [creation:206] Starting PostInitCallbackEntry : Entity(com.digitalbooking.backend.entity.Category) `staticFetchableList` generator
[2023-02-16 16:18:43] [ DEBUG] [AbstractEntityPersister:4159] Static SQL for entity: com.digitalbooking.backend.entity.Category
[2023-02-16 16:18:43] [ DEBUG] [AbstractEntityPersister:4164]  Version select: select id from categories where id =?
[2023-02-16 16:18:43] [ DEBUG] [AbstractEntityPersister:394]  Insert 0: insert into categories (description, image_url, title, id) values (?, ?, ?, ?)
[2023-02-16 16:18:43] [ DEBUG] [AbstractEntityPersister:394]  Update 0: update categories set description=?, image_url=?, title=? where id=?
[2023-02-16 16:18:43] [ DEBUG] [AbstractEntityPersister:394]  Delete 0: delete from categories where id=?
[2023-02-16 16:18:43] [ DEBUG] [AbstractEntityPersister:4172]  Identity insert: insert into categories (id, description, image_url, title) values (default, ?, ?, ?)
[2023-02-16 16:18:43] [ DEBUG] [create:34] Created new SQL alias : c1_0
[2023-02-16 16:18:43] [ DEBUG] [create:55] Registration of TableGroup [StandardTableGroup(com.digitalbooking.backend.entity.Category)] with identifierForTableGroup [com.digitalbooking.backend.entity.Category] for NavigablePath [com.digitalbooking.backend.entity.Category] 
[2023-02-16 16:18:43] [ DEBUG] [AST:69] DomainResult Graph:
 \-EntityResultImpl [com.digitalbooking.backend.entity.Category]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.description]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.imageUrl]
 |  \-BasicFetch [com.digitalbooking.backend.entity.Category.title]

[2023-02-16 16:18:43] [ DEBUG] [tree:47] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : com.digitalbooking.backend.entity.Category) {
          primaryTableReference : categories as c1_0
        }
      }
    }

[2023-02-16 16:18:43] [ DEBUG] [NamedObjectRepository:217] Checking 0 named HQL queries
[2023-02-16 16:18:43] [ DEBUG] [NamedObjectRepository:234] Checking 0 named SQL queries
[2023-02-16 16:18:43] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:18:43] [ DEBUG] [SQL:128] create table categories (id bigint generated by default as identity, description varchar(255), image_url varchar(255), title varchar(255), primary key (id))
[2023-02-16 16:18:43] [ INFO ] [JtaPlatformInitiator:51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-02-16 16:18:43] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:18:43] [ DEBUG] [EntityCopyObserverFactoryInitiator:39] Configured EntityCopyObserver strategy: disallow
[2023-02-16 16:18:43] [ DEBUG] [SessionFactoryRegistry:52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c5ac0
[2023-02-16 16:18:43] [ DEBUG] [SessionFactoryRegistry:74] Registering SessionFactory: 918ed74b-1a77-461a-b0f0-61687327dcc8 (<unnamed>)
[2023-02-16 16:18:43] [ DEBUG] [SessionFactoryRegistry:81] Not binding SessionFactory to JNDI, no JNDI name configured
[2023-02-16 16:18:43] [ DEBUG] [SessionFactoryImpl:770] HHH000031: Closing
[2023-02-16 16:18:43] [ INFO ] [SchemaDropperImpl$DelayedDropActionImpl:585] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[2023-02-16 16:18:43] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:18:43] [ DEBUG] [TypeConfiguration$Scope:474] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4a5fab78] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@224e6e88]
[2023-02-16 16:18:43] [ DEBUG] [AbstractServiceRegistryImpl:403] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2023-02-16 16:18:43] [ DEBUG] [BootstrapServiceRegistryImpl:296] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2023-02-16 16:44:44] [ DEBUG] [logging:38] Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2023-02-16 16:44:44] [ DEBUG] [LogHelper:102] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@4b1210ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/P:/dh/proyectoIntegrador/grupo-06/backend/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.digitalbooking.backend.entity.Category]
	Mapping files names []
	Properties []
[2023-02-16 16:44:44] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2023-02-16 16:44:44] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2023-02-16 16:44:44] [ INFO ] [Version:44] HHH000412: Hibernate ORM core version 6.1.6.Final
[2023-02-16 16:44:44] [ DEBUG] [Environment:163] HHH000206: hibernate.properties not found
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:44:45] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2023-02-16 16:44:45] [ WARN ] [deprecation:626] HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
[2023-02-16 16:44:45] [ DEBUG] [RegionFactoryInitiator:117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2023-02-16 16:44:45] [ DEBUG] [RegionFactoryInitiator:49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2023-02-16 16:44:45] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@59845579
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@59845579
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [B -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration image -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration blob -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration integer -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration int -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d3e3085
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration string -> org.hibernate.type.BasicTypeReference@2ba42204
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2ba42204
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@27585351
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@27585351
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@27585351
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration text -> org.hibernate.type.BasicTypeReference@2de6f1bc
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5b35c7d
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration clob -> org.hibernate.type.BasicTypeReference@29d405e6
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@29d405e6
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4c731956
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4c731956
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@56826a75
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@49cd946c
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@40bf4386
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@14d25b6e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@51c65a43
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@740dcae3
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f726750
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f726750
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e80a001
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@577bf0aa
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7455dacb
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration date -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration time -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@52bd9a27
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@611e5819
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration instant -> org.hibernate.type.BasicTypeReference@681c0ae6
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@681c0ae6
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@73ca34e7
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@73ca34e7
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@73ca34e7
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d98e41b
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5ed5b321
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration class -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5696c927
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration currency -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration locale -> org.hibernate.type.BasicTypeReference@739265f1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@739265f1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@58eac00e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@58eac00e
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6acffb2d
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6acffb2d
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@61149fa5
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@61149fa5
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration url -> org.hibernate.type.BasicTypeReference@149c39b
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@149c39b
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@f2d890c
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@172f4514
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@172f4514
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:372] Adding type registration object -> org.hibernate.type.JavaObjectType@10177794
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@10177794
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:372] Adding type registration null -> org.hibernate.type.NullType@4b033eac
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@69c532af
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@45a1d057
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@51a16adf
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@385d819
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4315c28c
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@8fd91d1
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@52d0f583
[2023-02-16 16:44:45] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7fb8bad0
[2023-02-16 16:44:45] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f97bc14] into BootstrapContext; was [null]
[2023-02-16 16:44:45] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f97bc14) [was null]
[2023-02-16 16:44:45] [ DEBUG] [BootstrapContextImpl:293] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5e002356] into BootstrapContext; was [null]
[2023-02-16 16:44:45] [ DEBUG] [BootstrapContextImpl:288] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f820f42] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b325930]
[2023-02-16 16:44:46] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f97bc14]
[2023-02-16 16:44:46] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f97bc14]
[2023-02-16 16:44:49] [ DEBUG] [JdbcEnvironmentInitiator:181] Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:44:49] [ DEBUG] [JdbcEnvironmentInitiator:192] Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:44:49] [ DEBUG] [JdbcEnvironmentInitiator:389] JDBC version : 4.2
[2023-02-16 16:44:49] [ INFO ] [SQL dialect:66] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2023-02-16 16:44:49] [ DEBUG] [IdentifierHelperBuilder:116] JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2023-02-16 16:44:50] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[2023-02-16 16:44:50] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[2023-02-16 16:44:50] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[2023-02-16 16:44:50] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:44:50] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:44:50] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[2023-02-16 16:44:50] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:44:50] [ DEBUG] [BasicTypeRegistry:372] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:44:50] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:44:50] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:44:50] [ DEBUG] [BasicTypeRegistry:372] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:44:50] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:44:50] [ DEBUG] [TypeConfiguration$Scope:166] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50f4b83d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10131289]
[2023-02-16 16:44:50] [ DEBUG] [Namespace:53] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2023-02-16 16:44:50] [ DEBUG] [EntityBinder:205] Binding entity from annotated class: com.digitalbooking.backend.entity.Category
[2023-02-16 16:44:50] [ DEBUG] [AnnotatedColumn:265] Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2023-02-16 16:44:50] [ DEBUG] [EntityBinder:1223] Import with entity name Category
[2023-02-16 16:44:50] [ DEBUG] [EntityBinder:1723] Bind entity com.digitalbooking.backend.entity.Category on table categories
[2023-02-16 16:44:50] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2023-02-16 16:44:50] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:44:50] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property id with lazy=false
[2023-02-16 16:44:50] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:id]
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1081] building BasicValue for id
[2023-02-16 16:44:50] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.id
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:310] Building property id
[2023-02-16 16:44:50] [ DEBUG] [BinderHelper:726] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[2023-02-16 16:44:50] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property description with lazy=false
[2023-02-16 16:44:50] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:description]
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1081] building BasicValue for description
[2023-02-16 16:44:50] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.description
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:310] Building property description
[2023-02-16 16:44:50] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=image_url, insertable=true, updatable=true, unique=false}
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property imageUrl with lazy=false
[2023-02-16 16:44:50] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:imageUrl]
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1081] building BasicValue for imageUrl
[2023-02-16 16:44:50] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.image_url
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:310] Building property imageUrl
[2023-02-16 16:44:50] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property title with lazy=false
[2023-02-16 16:44:50] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:title]
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1081] building BasicValue for title
[2023-02-16 16:44:50] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.title
[2023-02-16 16:44:50] [ DEBUG] [PropertyBinder:310] Building property title
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for id
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for description
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for imageUrl
[2023-02-16 16:44:50] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for title
[2023-02-16 16:44:50] [ DEBUG] [PrimaryKey:35] Forcing column [id] to be non-null as it is part of the primary key for table [categories]
[2023-02-16 16:44:51] [ DEBUG] [SessionFactoryImpl:199] Building session factory
[2023-02-16 16:44:51] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:44:51] [ DEBUG] [SessionFactoryImpl:265] Session factory constructed with filter configurations : {}
[2023-02-16 16:44:51] [ DEBUG] [SessionFactoryImpl:266] Instantiating session factory with properties: {java.specification.version=19, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2086d469, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=P:\dh\proyectoIntegrador\grupo-06\backend\target\classes;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.1\spring-boot-starter-web-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\59898\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\59898\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\59898\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\59898\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\59898\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\59898\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\59898\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\59898\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\59898\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\59898\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\59898\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\59898\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\59898\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\59898\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\59898\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\59898\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\59898\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\59898\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.2\spring-boot-starter-security-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-config\6.0.1\spring-security-config-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-web\6.0.1\spring-security-web-6.0.1.jar;C:\Users\59898\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\59898\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\59898\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\59898\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\59898\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-core\6.0.1\spring-security-core-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-crypto\6.0.1\spring-security-crypto-6.0.1.jar;C:\Users\59898\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=America/Montevideo, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=19, os.name=Windows 10, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=UY, sun.boot.library.path=C:\Program Files\Java\jdk-19\bin, sun.java.command=com.digitalbooking.backend.BackendApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@b1d19ff, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\59898, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=C:\Program Files\Java\jdk-19, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=59898, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\59898\AppData\Local\Temp\, catalina.home=C:\Users\59898\AppData\Local\Temp\tomcat.8080.4251425194375432995, java.version=19.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=P:\dh\proyectoIntegrador\grupo-06\backend, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=8680, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\59898\AppData\Local\Temp\tomcat.8080.4251425194375432995, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@17c53dfb, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\HashiCorp\Vagrant\bin;C:\Program Files\PuTTY\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\59898\AppData\Local\Microsoft\WindowsApps;;C:\Users\59898\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\59898\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2\bin;;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=63.0}
[2023-02-16 16:44:51] [ DEBUG] [SessionFactoryImpl:303] Instantiated session factory
[2023-02-16 16:44:52] [ DEBUG] [cache:48] Starting QueryPlanCache(2048)
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@23469199] under count; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f07930a] under every; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@580c17a0] under any; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[2023-02-16 16:44:52] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : length -> character_length
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1a7e799e] under position; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2830315f] under overlay; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4537880f] under trim; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@10d98940] under cast; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4d8056bf] under collate; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7e50eeb9] under extract; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@53ba7997] under ifnull; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@782e6b40] under pad; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7d12429] under str; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@38e00b47] under format; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@66e1b2a] under timestampadd; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@517fbf62] under timestampdiff; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : dateadd -> timestampadd
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : datediff -> timestampdiff
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@429e7914] under current_date; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@298263fa] under current_time; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@466fedfa] under current_timestamp; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current date -> current_date
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current time -> current_time
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current timestamp -> current_timestamp
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a7d0c9f] under local_date; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b1a901d] under local_time; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11bdab37] under local_datetime; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@280484c7] under offset_datetime; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local date -> local_date
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local time -> local_time
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local datetime -> local_datetime
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : offset datetime -> offset_datetime
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a6f6cac] under instant; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current_instant -> instant
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7417ef4f] under sql; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c0e2ec] under count; prior registration was org.hibernate.dialect.function.CountFunction@23469199
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@344f9467] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : day -> day_of_month
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2b1a901d
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@11bdab37
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : chr -> char
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e98b933] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1a7e799e
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@222d9d4f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : every -> bool_and
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : any -> bool_or
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4269aad7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@38e00b47
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@528e5e38] under listagg; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@38ef1a0a] under mode; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@56f9de3b] under percentile_cont; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6728370a] under percentile_disc; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@55061418] under rank; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@27db45f] under dense_rank; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6ec3d8e4] under percent_rank; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1aeff8ca] under cume_dist; prior registration was null
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] abs(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double acos(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer ascii(STRING arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double asin(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double atan(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double atan2(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double avg(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] bit_and(arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer bit_length(STRING_OR_CLOB arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] bit_or(arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] bitand(arg0, arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] bitor(arg0, arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] bitxor(arg0, arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_and(BOOLEAN predicate)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_or(BOOLEAN predicate)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] cast(arg as Type)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] ceiling(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Character char(INTEGER arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer character_length(STRING_OR_CLOB arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] coalesce(arg0[, arg1[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String collate(STRING string as COLLATION collation)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String concat(STRING string0[, STRING string1[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double cos(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double cot(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Long count([distinct ]{arg|*})
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double cume_dist([arg0[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Date curdate()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Date current_date
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Time current_time
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current_timestamp
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Time curtime()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_month(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_week(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_year(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String dayname(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double degrees(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Long dense_rank([arg0[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double exp(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] first_valueANY value
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] floor(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String format(TEMPORAL datetime as STRING pattern)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer hour(TIME arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] ifnull(arg0, arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Instant instant
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] lagANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] last_valueANY value
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] leadANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String left(STRING string, INTEGER length)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String listagg(STRING arg0, STRING arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double ln(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local_date
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local_datetime
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local_time
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Time localtime
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp localtimestamp
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer locate(STRING pattern, STRING string[, INTEGER start])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double log10(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String lower(STRING string)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String lpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String ltrim(STRING string)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] max(COMPARABLE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double median(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer microsecond(TIME arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] min(COMPARABLE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer minute(TIME arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer mod(INTEGER arg0, INTEGER arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] mode()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer month(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String monthname(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp now()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] nth_valueANY value, INTEGER nth
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] nullif(arg0, arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer octet_length(STRING_OR_CLOB arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset_datetime
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double percent_rank([arg0[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] percentile_cont(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] percentile_disc(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double pi()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer position(STRING pattern in STRING string)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double power(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer quarter(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double radians(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double rand([INTEGER seed])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Long rank([arg0[, ...]])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String repeat(STRING string, INTEGER times)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String replace(STRING string, STRING pattern, STRING replacement)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String right(STRING string, INTEGER length)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] round(NUMERIC arg0, INTEGER arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Long row_number()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Long rownum()
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String rpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String rtrim(STRING string)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer second(TIME arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer sign(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double sin(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String soundex(arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String space(INTEGER arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Object sql
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double sqrt(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_pop(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_samp(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String str(arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String substr(STRING string, INTEGER start[, INTEGER length])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] sum(arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp sysdate
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double tan(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String translate(STRING arg0, STRING arg1, STRING arg2)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double truncate(NUMERIC number, INTEGER places)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] String upper(STRING string)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double var_pop(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Double var_samp(NUMERIC arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer week(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer year(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN predicate)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Character chr(INTEGER arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Date current date
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Time current time
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current timestamp
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Instant current_instant
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN predicate)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer length(STRING_OR_CLOB arg)
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local date
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local datetime
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local time
[2023-02-16 16:44:53] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset datetime
[2023-02-16 16:44:53] [ DEBUG] [TypeConfiguration$Scope:171] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@50f4b83d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6115846e]
[2023-02-16 16:44:53] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:44:53] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:44:54] [ DEBUG] [creation:94] Starting post-init callbacks
[2023-02-16 16:44:54] [ DEBUG] [creation:206] Starting PostInitCallbackEntry : Entity(com.digitalbooking.backend.entity.Category) `staticFetchableList` generator
[2023-02-16 16:44:54] [ DEBUG] [AbstractEntityPersister:4159] Static SQL for entity: com.digitalbooking.backend.entity.Category
[2023-02-16 16:44:54] [ DEBUG] [AbstractEntityPersister:4164]  Version select: select id from categories where id =?
[2023-02-16 16:44:54] [ DEBUG] [AbstractEntityPersister:394]  Insert 0: insert into categories (description, image_url, title, id) values (?, ?, ?, ?)
[2023-02-16 16:44:54] [ DEBUG] [AbstractEntityPersister:394]  Update 0: update categories set description=?, image_url=?, title=? where id=?
[2023-02-16 16:44:54] [ DEBUG] [AbstractEntityPersister:394]  Delete 0: delete from categories where id=?
[2023-02-16 16:44:54] [ DEBUG] [AbstractEntityPersister:4172]  Identity insert: insert into categories (id, description, image_url, title) values (default, ?, ?, ?)
[2023-02-16 16:44:54] [ DEBUG] [create:34] Created new SQL alias : c1_0
[2023-02-16 16:44:54] [ DEBUG] [create:55] Registration of TableGroup [StandardTableGroup(com.digitalbooking.backend.entity.Category)] with identifierForTableGroup [com.digitalbooking.backend.entity.Category] for NavigablePath [com.digitalbooking.backend.entity.Category] 
[2023-02-16 16:44:54] [ DEBUG] [AST:69] DomainResult Graph:
 \-EntityResultImpl [com.digitalbooking.backend.entity.Category]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.description]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.imageUrl]
 |  \-BasicFetch [com.digitalbooking.backend.entity.Category.title]

[2023-02-16 16:44:54] [ DEBUG] [tree:47] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : com.digitalbooking.backend.entity.Category) {
          primaryTableReference : categories as c1_0
        }
      }
    }

[2023-02-16 16:44:54] [ DEBUG] [NamedObjectRepository:217] Checking 0 named HQL queries
[2023-02-16 16:44:54] [ DEBUG] [NamedObjectRepository:234] Checking 0 named SQL queries
[2023-02-16 16:44:54] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:44:54] [ DEBUG] [SQL:128] create table categories (id bigint generated by default as identity, description varchar(255), image_url varchar(255), title varchar(255), primary key (id))
[2023-02-16 16:44:54] [ INFO ] [JtaPlatformInitiator:51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-02-16 16:44:54] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:44:54] [ DEBUG] [EntityCopyObserverFactoryInitiator:39] Configured EntityCopyObserver strategy: disallow
[2023-02-16 16:44:54] [ DEBUG] [SessionFactoryRegistry:52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@602a3237
[2023-02-16 16:44:54] [ DEBUG] [SessionFactoryRegistry:74] Registering SessionFactory: 8425d48f-0658-4b34-9084-51d2a3037935 (<unnamed>)
[2023-02-16 16:44:54] [ DEBUG] [SessionFactoryRegistry:81] Not binding SessionFactory to JNDI, no JNDI name configured
[2023-02-16 16:44:54] [ DEBUG] [SessionFactoryImpl:770] HHH000031: Closing
[2023-02-16 16:44:54] [ INFO ] [SchemaDropperImpl$DelayedDropActionImpl:585] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[2023-02-16 16:44:54] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:44:54] [ DEBUG] [TypeConfiguration$Scope:474] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@505a8582] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6115846e]
[2023-02-16 16:44:54] [ DEBUG] [AbstractServiceRegistryImpl:403] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2023-02-16 16:44:54] [ DEBUG] [BootstrapServiceRegistryImpl:296] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2023-02-16 16:45:51] [ DEBUG] [logging:38] Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2023-02-16 16:45:51] [ DEBUG] [LogHelper:102] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@4b1210ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/P:/dh/proyectoIntegrador/grupo-06/backend/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.digitalbooking.backend.entity.Category]
	Mapping files names []
	Properties []
[2023-02-16 16:45:51] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2023-02-16 16:45:51] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2023-02-16 16:45:51] [ INFO ] [Version:44] HHH000412: Hibernate ORM core version 6.1.6.Final
[2023-02-16 16:45:51] [ DEBUG] [Environment:163] HHH000206: hibernate.properties not found
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:45:51] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2023-02-16 16:45:51] [ WARN ] [deprecation:626] HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
[2023-02-16 16:45:51] [ DEBUG] [RegionFactoryInitiator:117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2023-02-16 16:45:51] [ DEBUG] [RegionFactoryInitiator:49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2023-02-16 16:45:51] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@79a201cf
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1cbc5693
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3d2f3dcb
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59845579
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59845579
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@30c19bff
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:45:51] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [B -> org.hibernate.type.BasicTypeReference@4e375bba
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@ab2e6d2
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration image -> org.hibernate.type.BasicTypeReference@71664560
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration blob -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4d4436d0
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@39da5e49
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2443abd6
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@674da77b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration integer -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration int -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@bd3eff4
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6010d0d1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5934ca1e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5348d83c
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@477021ee
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2180e789
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5e9bbd9d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4b87074a
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration string -> org.hibernate.type.BasicTypeReference@d3e3085
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@d3e3085
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2ba42204
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration characters -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [C -> org.hibernate.type.BasicTypeReference@285005b8
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@5b1efaaf
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration text -> org.hibernate.type.BasicTypeReference@27585351
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@2de6f1bc
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration clob -> org.hibernate.type.BasicTypeReference@5b35c7d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5b35c7d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@29d405e6
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@29d405e6
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c731956
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@56826a75
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@49cd946c
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@40bf4386
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14d25b6e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@51c65a43
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@740dcae3
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@740dcae3
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4e140497
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@481b2f10
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2b6c7012
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@31acfd4e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5f726750
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e80a001
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@624b523
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@50b46e24
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c30cb85
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@577bf0aa
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration date -> org.hibernate.type.BasicTypeReference@7455dacb
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7455dacb
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration time -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7634f2b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1d15c0a1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@15639d09
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4fba8eec
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@52bd9a27
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration instant -> org.hibernate.type.BasicTypeReference@611e5819
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@611e5819
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@681c0ae6
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@681c0ae6
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@681c0ae6
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73ca34e7
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4d98e41b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration class -> org.hibernate.type.BasicTypeReference@5ed5b321
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5ed5b321
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration currency -> org.hibernate.type.BasicTypeReference@6d6bff89
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6d6bff89
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6d6bff89
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration locale -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@541bf968
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@739265f1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@739265f1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@58eac00e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@58eac00e
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6acffb2d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6acffb2d
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration url -> org.hibernate.type.BasicTypeReference@61149fa5
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@61149fa5
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@149c39b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50fdf44f
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@50fdf44f
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration object -> org.hibernate.type.JavaObjectType@7e5b621b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7e5b621b
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration null -> org.hibernate.type.NullType@1320e68a
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4b033eac
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@69c532af
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@45a1d057
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@51a16adf
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@385d819
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4315c28c
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@8fd91d1
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@52d0f583
[2023-02-16 16:45:52] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@96897c8] into BootstrapContext; was [null]
[2023-02-16 16:45:52] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@96897c8) [was null]
[2023-02-16 16:45:52] [ DEBUG] [BootstrapContextImpl:293] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3b9ac754] into BootstrapContext; was [null]
[2023-02-16 16:45:52] [ DEBUG] [BootstrapContextImpl:288] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5e002356] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4f820f42]
[2023-02-16 16:45:52] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@96897c8]
[2023-02-16 16:45:52] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@96897c8]
[2023-02-16 16:45:52] [ DEBUG] [JdbcEnvironmentInitiator:181] Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:45:52] [ DEBUG] [JdbcEnvironmentInitiator:192] Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:45:52] [ DEBUG] [JdbcEnvironmentInitiator:389] JDBC version : 4.2
[2023-02-16 16:45:52] [ INFO ] [SQL dialect:66] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2023-02-16 16:45:52] [ DEBUG] [IdentifierHelperBuilder:116] JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2023-02-16 16:45:52] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[2023-02-16 16:45:52] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[2023-02-16 16:45:52] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[2023-02-16 16:45:52] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:45:52] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:45:52] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:45:52] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:45:52] [ DEBUG] [TypeConfiguration$Scope:166] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d66ae3a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@50f4b83d]
[2023-02-16 16:45:52] [ DEBUG] [Namespace:53] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2023-02-16 16:45:52] [ DEBUG] [EntityBinder:205] Binding entity from annotated class: com.digitalbooking.backend.entity.Category
[2023-02-16 16:45:53] [ DEBUG] [AnnotatedColumn:265] Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2023-02-16 16:45:53] [ DEBUG] [EntityBinder:1223] Import with entity name Category
[2023-02-16 16:45:53] [ DEBUG] [EntityBinder:1723] Bind entity com.digitalbooking.backend.entity.Category on table categories
[2023-02-16 16:45:53] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2023-02-16 16:45:53] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:45:53] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property id with lazy=false
[2023-02-16 16:45:53] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:id]
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1081] building BasicValue for id
[2023-02-16 16:45:53] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.id
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:310] Building property id
[2023-02-16 16:45:53] [ DEBUG] [BinderHelper:726] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[2023-02-16 16:45:53] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property description with lazy=false
[2023-02-16 16:45:53] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:description]
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1081] building BasicValue for description
[2023-02-16 16:45:53] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.description
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:310] Building property description
[2023-02-16 16:45:53] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=image_url, insertable=true, updatable=true, unique=false}
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property imageUrl with lazy=false
[2023-02-16 16:45:53] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:imageUrl]
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1081] building BasicValue for imageUrl
[2023-02-16 16:45:53] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.image_url
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:310] Building property imageUrl
[2023-02-16 16:45:53] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property title with lazy=false
[2023-02-16 16:45:53] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:title]
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1081] building BasicValue for title
[2023-02-16 16:45:53] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.title
[2023-02-16 16:45:53] [ DEBUG] [PropertyBinder:310] Building property title
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for id
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for description
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for imageUrl
[2023-02-16 16:45:53] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for title
[2023-02-16 16:45:53] [ DEBUG] [PrimaryKey:35] Forcing column [id] to be non-null as it is part of the primary key for table [categories]
[2023-02-16 16:45:53] [ DEBUG] [SessionFactoryImpl:199] Building session factory
[2023-02-16 16:45:53] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:45:53] [ DEBUG] [SessionFactoryImpl:265] Session factory constructed with filter configurations : {}
[2023-02-16 16:45:53] [ DEBUG] [SessionFactoryImpl:266] Instantiating session factory with properties: {java.specification.version=19, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@521ba38f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=P:\dh\proyectoIntegrador\grupo-06\backend\target\classes;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.1\spring-boot-starter-web-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\59898\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\59898\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\59898\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\59898\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\59898\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\59898\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\59898\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\59898\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\59898\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\59898\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\59898\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\59898\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\59898\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\59898\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\59898\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\59898\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\59898\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\59898\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.2\spring-boot-starter-security-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-config\6.0.1\spring-security-config-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-web\6.0.1\spring-security-web-6.0.1.jar;C:\Users\59898\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\59898\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\59898\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\59898\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\59898\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-core\6.0.1\spring-security-core-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-crypto\6.0.1\spring-security-crypto-6.0.1.jar;C:\Users\59898\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=America/Montevideo, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=19, os.name=Windows 10, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=UY, sun.boot.library.path=C:\Program Files\Java\jdk-19\bin, sun.java.command=com.digitalbooking.backend.BackendApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2086d469, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\59898, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=C:\Program Files\Java\jdk-19, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=59898, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\59898\AppData\Local\Temp\, catalina.home=C:\Users\59898\AppData\Local\Temp\tomcat.8080.15727955062104673726, java.version=19.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=P:\dh\proyectoIntegrador\grupo-06\backend, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=8060, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\59898\AppData\Local\Temp\tomcat.8080.15727955062104673726, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@b1d19ff, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\HashiCorp\Vagrant\bin;C:\Program Files\PuTTY\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\59898\AppData\Local\Microsoft\WindowsApps;;C:\Users\59898\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\59898\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2\bin;;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=63.0}
[2023-02-16 16:45:53] [ DEBUG] [SessionFactoryImpl:303] Instantiated session factory
[2023-02-16 16:45:53] [ DEBUG] [cache:48] Starting QueryPlanCache(2048)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70d5d96b] under count; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3355168] under every; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f07930a] under any; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : length -> character_length
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@365bfc5f] under position; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@416b1265] under overlay; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6c24f61d] under trim; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@55071497] under cast; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a51336a] under collate; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@312a738d] under extract; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2a667f44] under ifnull; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7858d31d] under pad; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@cae2a97] under str; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6c421123] under format; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3eec8583] under timestampadd; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7ff09659] under timestampdiff; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : dateadd -> timestampadd
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : datediff -> timestampdiff
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e364f1f] under current_date; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@429e7914] under current_time; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@298263fa] under current_timestamp; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current date -> current_date
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current time -> current_time
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current timestamp -> current_timestamp
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@466fedfa] under local_date; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a7d0c9f] under local_time; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b1a901d] under local_datetime; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11bdab37] under offset_datetime; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local date -> local_date
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local time -> local_time
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local datetime -> local_datetime
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : offset datetime -> offset_datetime
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@280484c7] under instant; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current_instant -> instant
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@553ce348] under sql; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7417ef4f] under count; prior registration was org.hibernate.dialect.function.CountFunction@70d5d96b
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@369ad7da] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : day -> day_of_month
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1a7d0c9f
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b1a901d
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : chr -> char
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@344f9467] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@365bfc5f
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e98b933] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : every -> bool_and
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : any -> bool_or
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@222d9d4f] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6c421123
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@18d610e1] under listagg; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@34cf0e80] under mode; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@38ef1a0a] under percentile_cont; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@56f9de3b] under percentile_disc; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@73b0ed03] under rank; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@55061418] under dense_rank; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@27db45f] under percent_rank; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6ec3d8e4] under cume_dist; prior registration was null
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] abs(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double acos(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer ascii(STRING arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double asin(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double atan(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double atan2(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double avg(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] bit_and(arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer bit_length(STRING_OR_CLOB arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] bit_or(arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] bitand(arg0, arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] bitor(arg0, arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] bitxor(arg0, arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_and(BOOLEAN predicate)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_or(BOOLEAN predicate)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] cast(arg as Type)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] ceiling(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Character char(INTEGER arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer character_length(STRING_OR_CLOB arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] coalesce(arg0[, arg1[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String collate(STRING string as COLLATION collation)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String concat(STRING string0[, STRING string1[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double cos(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double cot(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Long count([distinct ]{arg|*})
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double cume_dist([arg0[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Date curdate()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Date current_date
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Time current_time
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current_timestamp
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Time curtime()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_month(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_week(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_year(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String dayname(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double degrees(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Long dense_rank([arg0[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double exp(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] first_valueANY value
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] floor(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String format(TEMPORAL datetime as STRING pattern)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer hour(TIME arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] ifnull(arg0, arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Instant instant
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] lagANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] last_valueANY value
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] leadANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String left(STRING string, INTEGER length)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String listagg(STRING arg0, STRING arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double ln(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local_date
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local_datetime
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local_time
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Time localtime
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp localtimestamp
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer locate(STRING pattern, STRING string[, INTEGER start])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double log10(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String lower(STRING string)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String lpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String ltrim(STRING string)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] max(COMPARABLE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double median(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer microsecond(TIME arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] min(COMPARABLE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer minute(TIME arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer mod(INTEGER arg0, INTEGER arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] mode()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer month(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String monthname(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp now()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] nth_valueANY value, INTEGER nth
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] nullif(arg0, arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer octet_length(STRING_OR_CLOB arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset_datetime
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double percent_rank([arg0[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] percentile_cont(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] percentile_disc(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double pi()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer position(STRING pattern in STRING string)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double power(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer quarter(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double radians(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double rand([INTEGER seed])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Long rank([arg0[, ...]])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String repeat(STRING string, INTEGER times)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String replace(STRING string, STRING pattern, STRING replacement)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String right(STRING string, INTEGER length)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] round(NUMERIC arg0, INTEGER arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Long row_number()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Long rownum()
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String rpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String rtrim(STRING string)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer second(TIME arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer sign(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double sin(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String soundex(arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String space(INTEGER arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Object sql
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double sqrt(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_pop(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_samp(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String str(arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String substr(STRING string, INTEGER start[, INTEGER length])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] sum(arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp sysdate
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double tan(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String translate(STRING arg0, STRING arg1, STRING arg2)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double truncate(NUMERIC number, INTEGER places)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] String upper(STRING string)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double var_pop(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Double var_samp(NUMERIC arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer week(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer year(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN predicate)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Character chr(INTEGER arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Date current date
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Time current time
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current timestamp
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Instant current_instant
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN predicate)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] Integer length(STRING_OR_CLOB arg)
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local date
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local datetime
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local time
[2023-02-16 16:45:53] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset datetime
[2023-02-16 16:45:53] [ DEBUG] [TypeConfiguration$Scope:171] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d66ae3a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@12aa381f]
[2023-02-16 16:45:53] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:45:53] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:45:54] [ DEBUG] [creation:94] Starting post-init callbacks
[2023-02-16 16:45:54] [ DEBUG] [creation:206] Starting PostInitCallbackEntry : Entity(com.digitalbooking.backend.entity.Category) `staticFetchableList` generator
[2023-02-16 16:45:54] [ DEBUG] [AbstractEntityPersister:4159] Static SQL for entity: com.digitalbooking.backend.entity.Category
[2023-02-16 16:45:54] [ DEBUG] [AbstractEntityPersister:4164]  Version select: select id from categories where id =?
[2023-02-16 16:45:54] [ DEBUG] [AbstractEntityPersister:394]  Insert 0: insert into categories (description, image_url, title, id) values (?, ?, ?, ?)
[2023-02-16 16:45:54] [ DEBUG] [AbstractEntityPersister:394]  Update 0: update categories set description=?, image_url=?, title=? where id=?
[2023-02-16 16:45:54] [ DEBUG] [AbstractEntityPersister:394]  Delete 0: delete from categories where id=?
[2023-02-16 16:45:54] [ DEBUG] [AbstractEntityPersister:4172]  Identity insert: insert into categories (id, description, image_url, title) values (default, ?, ?, ?)
[2023-02-16 16:45:54] [ DEBUG] [create:34] Created new SQL alias : c1_0
[2023-02-16 16:45:54] [ DEBUG] [create:55] Registration of TableGroup [StandardTableGroup(com.digitalbooking.backend.entity.Category)] with identifierForTableGroup [com.digitalbooking.backend.entity.Category] for NavigablePath [com.digitalbooking.backend.entity.Category] 
[2023-02-16 16:45:54] [ DEBUG] [AST:69] DomainResult Graph:
 \-EntityResultImpl [com.digitalbooking.backend.entity.Category]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.description]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.imageUrl]
 |  \-BasicFetch [com.digitalbooking.backend.entity.Category.title]

[2023-02-16 16:45:54] [ DEBUG] [tree:47] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : com.digitalbooking.backend.entity.Category) {
          primaryTableReference : categories as c1_0
        }
      }
    }

[2023-02-16 16:45:54] [ DEBUG] [NamedObjectRepository:217] Checking 0 named HQL queries
[2023-02-16 16:45:54] [ DEBUG] [NamedObjectRepository:234] Checking 0 named SQL queries
[2023-02-16 16:45:54] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:45:54] [ DEBUG] [SQL:128] create table categories (id bigint generated by default as identity, description varchar(255), image_url varchar(255), title varchar(255), primary key (id))
[2023-02-16 16:45:54] [ INFO ] [JtaPlatformInitiator:51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-02-16 16:45:54] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:45:54] [ DEBUG] [EntityCopyObserverFactoryInitiator:39] Configured EntityCopyObserver strategy: disallow
[2023-02-16 16:45:54] [ DEBUG] [SessionFactoryRegistry:52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3cf70afa
[2023-02-16 16:45:54] [ DEBUG] [SessionFactoryRegistry:74] Registering SessionFactory: a1ca4533-c972-4c2d-95df-efc6f29a50b3 (<unnamed>)
[2023-02-16 16:45:54] [ DEBUG] [SessionFactoryRegistry:81] Not binding SessionFactory to JNDI, no JNDI name configured
[2023-02-16 16:45:54] [ DEBUG] [SessionFactoryImpl:770] HHH000031: Closing
[2023-02-16 16:45:54] [ INFO ] [SchemaDropperImpl$DelayedDropActionImpl:585] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[2023-02-16 16:45:54] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:45:54] [ DEBUG] [TypeConfiguration$Scope:474] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@34f48d1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@12aa381f]
[2023-02-16 16:45:54] [ DEBUG] [AbstractServiceRegistryImpl:403] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2023-02-16 16:45:54] [ DEBUG] [BootstrapServiceRegistryImpl:296] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2023-02-16 16:56:52] [ DEBUG] [logging:38] Logging Provider: org.jboss.logging.Log4jLoggerProvider
[2023-02-16 16:56:52] [ DEBUG] [LogHelper:102] PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@4b1210ee
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/P:/dh/proyectoIntegrador/grupo-06/backend/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.digitalbooking.backend.entity.Category]
	Mapping files names []
	Properties []
[2023-02-16 16:56:52] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2023-02-16 16:56:52] [ DEBUG] [IntegratorServiceImpl:45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2023-02-16 16:56:52] [ INFO ] [Version:44] HHH000412: Hibernate ORM core version 6.1.6.Final
[2023-02-16 16:56:52] [ DEBUG] [Environment:163] HHH000206: hibernate.properties not found
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2023-02-16 16:56:53] [ DEBUG] [factory:160] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2023-02-16 16:56:53] [ WARN ] [deprecation:626] HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
[2023-02-16 16:56:53] [ DEBUG] [RegionFactoryInitiator:117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2023-02-16 16:56:53] [ DEBUG] [RegionFactoryInitiator:49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2023-02-16 16:56:53] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a4f8009
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2a4f8009
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2a4f8009
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@a85644c
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@a85644c
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@8054fe2
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@8054fe2
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e3f0aea
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e3f0aea
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@48268eec
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte -> org.hibernate.type.BasicTypeReference@48268eec
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@48268eec
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary -> org.hibernate.type.BasicTypeReference@69a024a0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@69a024a0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [B -> org.hibernate.type.BasicTypeReference@69a024a0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4bf80c29
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4bf80c29
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@4bf80c29
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@4bf80c29
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration image -> org.hibernate.type.BasicTypeReference@2d7637e6
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration blob -> org.hibernate.type.BasicTypeReference@515b9d4a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@515b9d4a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@39b626e5
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@32a4ecbe
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@2e71240b
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration short -> org.hibernate.type.BasicTypeReference@2e71240b
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2e71240b
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration integer -> org.hibernate.type.BasicTypeReference@23cd5d42
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration int -> org.hibernate.type.BasicTypeReference@23cd5d42
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@23cd5d42
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@2b44d6d0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration long -> org.hibernate.type.BasicTypeReference@2b44d6d0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2b44d6d0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@3e900e1a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration float -> org.hibernate.type.BasicTypeReference@3e900e1a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3e900e1a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@196624bf
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration double -> org.hibernate.type.BasicTypeReference@196624bf
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@196624bf
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@50085d9c
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@50085d9c
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5df7e31b
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5df7e31b
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character -> org.hibernate.type.BasicTypeReference@63a9c661
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char -> org.hibernate.type.BasicTypeReference@63a9c661
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@63a9c661
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4b425577
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration string -> org.hibernate.type.BasicTypeReference@5934153e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5934153e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3bb9ca38
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration characters -> org.hibernate.type.BasicTypeReference@160e99e0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@160e99e0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [C -> org.hibernate.type.BasicTypeReference@160e99e0
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4f3e9fbb
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@4f3e9fbb
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@4f3e9fbb
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration text -> org.hibernate.type.BasicTypeReference@365afe87
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@43471a7e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration clob -> org.hibernate.type.BasicTypeReference@21e45a6f
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@21e45a6f
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1a1ccaaf
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1a1ccaaf
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7b53b1ad
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3cc053
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@388c519
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7fbd3e75
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@198536f6
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7fdd43cd
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3a38f122
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3a38f122
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2ce03e86
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2ce03e86
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1c628f6a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1c628f6a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@9b47400
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@9b47400
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@747835f5
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@747835f5
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@594131f2
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51d0ec6f
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7bee8621
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7bee8621
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4e0cc334
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4e0cc334
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e12a5a6
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4877919f
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration date -> org.hibernate.type.BasicTypeReference@47a7c93e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@47a7c93e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration time -> org.hibernate.type.BasicTypeReference@6f9ab79d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6f9ab79d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@64ae105d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@64ae105d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@64ae105d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10a18e3e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10a18e3e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10a18e3e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@69364b2d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53aa2fc9
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration instant -> org.hibernate.type.BasicTypeReference@4792f119
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4792f119
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bde57ab
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bde57ab
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bde57ab
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@ea00de
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@23ca36d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration class -> org.hibernate.type.BasicTypeReference@52f6900a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@52f6900a
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration currency -> org.hibernate.type.BasicTypeReference@36c7cbe1
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@36c7cbe1
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@36c7cbe1
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration locale -> org.hibernate.type.BasicTypeReference@1ac6dd3d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1ac6dd3d
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@562919fe
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@562919fe
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@794f11cd
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@794f11cd
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@715f45c6
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@715f45c6
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration url -> org.hibernate.type.BasicTypeReference@5d5c41e5
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d5c41e5
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@43245559
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f726750
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:372] Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f726750
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:372] Adding type registration object -> org.hibernate.type.JavaObjectType@7459a21e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7459a21e
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:372] Adding type registration null -> org.hibernate.type.NullType@1a2e0d57
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5f025000
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@10980560
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@739e8b96
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19b07407
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@54ffa561
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@49c099b
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3d9f0a5
[2023-02-16 16:56:53] [ DEBUG] [BasicTypeRegistry:397] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1953bc95
[2023-02-16 16:56:53] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54af3cb9] into BootstrapContext; was [null]
[2023-02-16 16:56:53] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54af3cb9) [was null]
[2023-02-16 16:56:53] [ DEBUG] [BootstrapContextImpl:293] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@531ec978] into BootstrapContext; was [null]
[2023-02-16 16:56:53] [ DEBUG] [BootstrapContextImpl:288] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@93501be] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11d4d979]
[2023-02-16 16:56:53] [ DEBUG] [BootstrapContextImpl:283] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54af3cb9]
[2023-02-16 16:56:53] [ DEBUG] [ClassLoaderAccessImpl:45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@54af3cb9]
[2023-02-16 16:56:55] [ DEBUG] [JdbcEnvironmentInitiator:181] Database ->
       name : H2
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:56:55] [ DEBUG] [JdbcEnvironmentInitiator:192] Driver ->
       name : H2 JDBC Driver
    version : 2.1.214 (2022-06-13)
      major : 2
      minor : 1
[2023-02-16 16:56:55] [ DEBUG] [JdbcEnvironmentInitiator:389] JDBC version : 4.2
[2023-02-16 16:56:55] [ INFO ] [SQL dialect:66] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[2023-02-16 16:56:55] [ DEBUG] [IdentifierHelperBuilder:116] JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2023-02-16 16:56:55] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[2023-02-16 16:56:55] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[2023-02-16 16:56:55] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[2023-02-16 16:56:55] [ DEBUG] [JdbcTypeRegistry:50] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:56:55] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[2023-02-16 16:56:55] [ DEBUG] [JdbcTypeRegistry:58] addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[2023-02-16 16:56:55] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:56:55] [ DEBUG] [BasicTypeRegistry:372] Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:56:55] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
[2023-02-16 16:56:55] [ DEBUG] [BasicTypeRegistry:372] Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:56:55] [ DEBUG] [BasicTypeRegistry:372] Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:56:55] [ DEBUG] [BasicTypeRegistry:372] Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
[2023-02-16 16:56:55] [ DEBUG] [TypeConfiguration$Scope:166] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f0ce0d1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@664db2ca]
[2023-02-16 16:56:55] [ DEBUG] [Namespace:53] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2023-02-16 16:56:55] [ DEBUG] [EntityBinder:205] Binding entity from annotated class: com.digitalbooking.backend.entity.Category
[2023-02-16 16:56:55] [ DEBUG] [AnnotatedColumn:265] Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2023-02-16 16:56:55] [ DEBUG] [EntityBinder:1223] Import with entity name Category
[2023-02-16 16:56:55] [ DEBUG] [EntityBinder:1723] Bind entity com.digitalbooking.backend.entity.Category on table categories
[2023-02-16 16:56:55] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=id, insertable=true, updatable=true, unique=false}
[2023-02-16 16:56:55] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:56:55] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property id with lazy=false
[2023-02-16 16:56:55] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:id]
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1081] building BasicValue for id
[2023-02-16 16:56:55] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.id
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:310] Building property id
[2023-02-16 16:56:55] [ DEBUG] [BinderHelper:726] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[2023-02-16 16:56:55] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=description, insertable=true, updatable=true, unique=false}
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property description with lazy=false
[2023-02-16 16:56:55] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:description]
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1081] building BasicValue for description
[2023-02-16 16:56:55] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.description
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:310] Building property description
[2023-02-16 16:56:55] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=image_url, insertable=true, updatable=true, unique=false}
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property imageUrl with lazy=false
[2023-02-16 16:56:55] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:imageUrl]
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1081] building BasicValue for imageUrl
[2023-02-16 16:56:55] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.image_url
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:310] Building property imageUrl
[2023-02-16 16:56:55] [ DEBUG] [AnnotatedColumn:265] Binding column: Column{table=Table(categories), mappingColumn=title, insertable=true, updatable=true, unique=false}
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:183] MetadataSourceProcessor property title with lazy=false
[2023-02-16 16:56:55] [ DEBUG] [AbstractPropertyHolder:106] Attempting to locate auto-apply AttributeConverter for property [com.digitalbooking.backend.entity.Category:title]
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1081] building BasicValue for title
[2023-02-16 16:56:55] [ DEBUG] [BasicValue:263] Skipping column re-registration: categories.title
[2023-02-16 16:56:55] [ DEBUG] [PropertyBinder:310] Building property title
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for id
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for description
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for imageUrl
[2023-02-16 16:56:55] [ DEBUG] [BasicValueBinder:1140] Starting `BasicValueBinder#fillSimpleValue` for title
[2023-02-16 16:56:55] [ DEBUG] [PrimaryKey:35] Forcing column [id] to be non-null as it is part of the primary key for table [categories]
[2023-02-16 16:56:56] [ DEBUG] [SessionFactoryImpl:199] Building session factory
[2023-02-16 16:56:56] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:56:56] [ DEBUG] [SessionFactoryImpl:265] Session factory constructed with filter configurations : {}
[2023-02-16 16:56:56] [ DEBUG] [SessionFactoryImpl:266] Instantiating session factory with properties: {java.specification.version=19, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@473847fb, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=P:\dh\proyectoIntegrador\grupo-06\backend\target\classes;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.0.1\spring-boot-starter-web-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter\3.0.2\spring-boot-starter-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot\3.0.2\spring-boot-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.0.2\spring-boot-autoconfigure-3.0.2.jar;C:\Users\59898\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.0.2\spring-boot-starter-json-3.0.2.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.14.1\jackson-databind-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.14.1\jackson-annotations-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.14.1\jackson-core-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.14.1\jackson-datatype-jdk8-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.14.1\jackson-datatype-jsr310-2.14.1.jar;C:\Users\59898\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.14.1\jackson-module-parameter-names-2.14.1.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.0.2\spring-boot-starter-tomcat-3.0.2.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.5\tomcat-embed-core-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.5\tomcat-embed-el-10.1.5.jar;C:\Users\59898\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.5\tomcat-embed-websocket-10.1.5.jar;C:\Users\59898\.m2\repository\org\springframework\spring-web\6.0.4\spring-web-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-beans\6.0.4\spring-beans-6.0.4.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-observation\1.10.3\micrometer-observation-1.10.3.jar;C:\Users\59898\.m2\repository\io\micrometer\micrometer-commons\1.10.3\micrometer-commons-1.10.3.jar;C:\Users\59898\.m2\repository\org\springframework\spring-webmvc\6.0.4\spring-webmvc-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-context\6.0.4\spring-context-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-expression\6.0.4\spring-expression-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.0.2\spring-boot-starter-data-jpa-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.0.2\spring-boot-starter-aop-3.0.2.jar;C:\Users\59898\.m2\repository\org\aspectj\aspectjweaver\1.9.19\aspectjweaver-1.9.19.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.0.2\spring-boot-starter-jdbc-3.0.2.jar;C:\Users\59898\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jdbc\6.0.4\spring-jdbc-6.0.4.jar;C:\Users\59898\.m2\repository\org\hibernate\orm\hibernate-core\6.1.6.Final\hibernate-core-6.1.6.Final.jar;C:\Users\59898\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\59898\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\59898\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\59898\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.2.Final\hibernate-commons-annotations-6.0.2.Final.jar;C:\Users\59898\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\59898\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\59898\.m2\repository\net\bytebuddy\byte-buddy\1.12.22\byte-buddy-1.12.22.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.1\jaxb-runtime-4.0.1.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.1\jaxb-core-4.0.1.jar;C:\Users\59898\.m2\repository\org\eclipse\angus\angus-activation\1.0.0\angus-activation-1.0.0.jar;C:\Users\59898\.m2\repository\org\glassfish\jaxb\txw2\4.0.1\txw2-4.0.1.jar;C:\Users\59898\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\59898\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\59898\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-jpa\3.0.1\spring-data-jpa-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\data\spring-data-commons\3.0.1\spring-data-commons-3.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-orm\6.0.4\spring-orm-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-tx\6.0.4\spring-tx-6.0.4.jar;C:\Users\59898\.m2\repository\org\slf4j\slf4j-api\2.0.6\slf4j-api-2.0.6.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aspects\6.0.4\spring-aspects-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.0.2\spring-boot-starter-security-3.0.2.jar;C:\Users\59898\.m2\repository\org\springframework\spring-aop\6.0.4\spring-aop-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-config\6.0.1\spring-security-config-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-web\6.0.1\spring-security-web-6.0.1.jar;C:\Users\59898\.m2\repository\com\mysql\mysql-connector-j\8.0.32\mysql-connector-j-8.0.32.jar;C:\Users\59898\.m2\repository\org\projectlombok\lombok\1.18.24\lombok-1.18.24.jar;C:\Users\59898\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\59898\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\59898\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.1\jakarta.activation-api-2.1.1.jar;C:\Users\59898\.m2\repository\org\springframework\spring-core\6.0.4\spring-core-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\spring-jcl\6.0.4\spring-jcl-6.0.4.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-core\6.0.1\spring-security-core-6.0.1.jar;C:\Users\59898\.m2\repository\org\springframework\security\spring-security-crypto\6.0.1\spring-security-crypto-6.0.1.jar;C:\Users\59898\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=America/Montevideo, jakarta.persistence.sharedCache.mode=UNSPECIFIED, java.vm.specification.version=19, os.name=Windows 10, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=UY, sun.boot.library.path=C:\Program Files\Java\jdk-19\bin, sun.java.command=com.digitalbooking.backend.BackendApplication, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@270f28cf, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\59898, user.language=es, java.specification.vendor=Oracle Corporation, java.version.date=2022-10-18, java.home=C:\Program Files\Java\jdk-19, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=19.0.1+10-21, user.name=59898, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\59898\AppData\Local\Temp\, catalina.home=C:\Users\59898\AppData\Local\Temp\tomcat.8080.7359368375996489124, java.version=19.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=P:\dh\proyectoIntegrador\grupo-06\backend, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=5156, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\59898\AppData\Local\Temp\tomcat.8080.7359368375996489124, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2e1add6f, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\HashiCorp\Vagrant\bin;C:\Program Files\PuTTY\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\59898\AppData\Local\Microsoft\WindowsApps;;C:\Users\59898\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\59898\AppData\Roaming\npm;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2\bin;;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=19.0.1+10-21, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=63.0}
[2023-02-16 16:56:56] [ DEBUG] [SessionFactoryImpl:303] Instantiated session factory
[2023-02-16 16:56:56] [ DEBUG] [cache:48] Starting QueryPlanCache(2048)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5871a482] under count; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1d7f2f0a] under every; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@54defd69] under any; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : length -> character_length
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6f8ac8d5] under position; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@38a38ed4] under overlay; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6fced25c] under trim; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@40b31a16] under cast; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4de91056] under collate; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7e2c6fd6] under extract; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6113a26f] under ifnull; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@b70fa38] under pad; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@64757d56] under str; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@24a8e40d] under format; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@66ab924] under timestampadd; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5403431a] under timestampdiff; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : dateadd -> timestampadd
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : datediff -> timestampdiff
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@386e9fd8] under current_date; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@618f627b] under current_time; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10745a02] under current_timestamp; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current date -> current_date
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current time -> current_time
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current timestamp -> current_timestamp
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e2d8623] under local_date; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@72715e61] under local_time; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68f776ee] under local_datetime; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5a6195b8] under offset_datetime; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local date -> local_date
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local time -> local_time
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : local datetime -> local_datetime
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : offset datetime -> offset_datetime
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@8af1c49] under instant; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : current_instant -> instant
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5611bba] under sql; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5ba184fc] under count; prior registration was org.hibernate.dialect.function.CountFunction@5871a482
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@3355168] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(truncate)] under truncate; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : day -> day_of_month
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@72715e61
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@68f776ee
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : chr -> char
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f07930a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6f8ac8d5
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@580c17a0] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : every -> bool_and
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:296] Registering alternate key : any -> bool_or
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@29d2fa84] under format; prior registration was org.hibernate.dialect.function.FormatFunction@24a8e40d
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4a4b288a] under listagg; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6afeaf2d] under mode; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@365bfc5f] under percentile_cont; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1a7e799e] under percentile_disc; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2830315f] under rank; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@da22aa] under dense_rank; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@75452aea] under percent_rank; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [SqmFunctionRegistry:79] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c24f61d] under cume_dist; prior registration was null
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] abs(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double acos(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer ascii(STRING arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double asin(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double atan(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double atan2(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double avg(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] bit_and(arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer bit_length(STRING_OR_CLOB arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] bit_or(arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] bitand(arg0, arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] bitor(arg0, arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] bitxor(arg0, arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_and(BOOLEAN predicate)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Boolean bool_or(BOOLEAN predicate)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] cast(arg as Type)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] ceiling(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Character char(INTEGER arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer character_length(STRING_OR_CLOB arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] coalesce(arg0[, arg1[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String collate(STRING string as COLLATION collation)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String concat(STRING string0[, STRING string1[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double cos(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double cot(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Long count([distinct ]{arg|*})
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double cume_dist([arg0[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Date curdate()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Date current_date
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Time current_time
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current_timestamp
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Time curtime()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_month(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_week(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer day_of_year(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String dayname(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double degrees(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Long dense_rank([arg0[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double exp(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] first_valueANY value
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] floor(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String format(TEMPORAL datetime as STRING pattern)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer hour(TIME arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] ifnull(arg0, arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Instant instant
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] lagANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] last_valueANY value
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] leadANY value[, INTEGER offset[, ANY default]]
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String left(STRING string, INTEGER length)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String listagg(STRING arg0, STRING arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double ln(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local_date
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local_datetime
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local_time
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Time localtime
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp localtimestamp
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer locate(STRING pattern, STRING string[, INTEGER start])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double log10(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String lower(STRING string)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String lpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String ltrim(STRING string)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] max(COMPARABLE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double median(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer microsecond(TIME arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] min(COMPARABLE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer minute(TIME arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer mod(INTEGER arg0, INTEGER arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] mode()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer month(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String monthname(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp now()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] nth_valueANY value, INTEGER nth
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] nullif(arg0, arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer octet_length(STRING_OR_CLOB arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset_datetime
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double percent_rank([arg0[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] percentile_cont(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] percentile_disc(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double pi()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer position(STRING pattern in STRING string)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double power(NUMERIC arg0, NUMERIC arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer quarter(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double radians(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double rand([INTEGER seed])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Long rank([arg0[, ...]])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String repeat(STRING string, INTEGER times)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String replace(STRING string, STRING pattern, STRING replacement)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String right(STRING string, INTEGER length)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] round(NUMERIC arg0, INTEGER arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Long row_number()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Long rownum()
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String rpad(STRING string, INTEGER length[, STRING padding])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String rtrim(STRING string)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer second(TIME arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer sign(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double sin(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String soundex(arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String space(INTEGER arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Object sql
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double sqrt(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_pop(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double stddev_samp(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String str(arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String substr(STRING string, INTEGER start[, INTEGER length])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] sum(arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp sysdate
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double tan(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String translate(STRING arg0, STRING arg1, STRING arg2)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double truncate(NUMERIC number, INTEGER places)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] String upper(STRING string)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double var_pop(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Double var_samp(NUMERIC arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer week(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer year(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Boolean any(BOOLEAN predicate)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Character chr(INTEGER arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Date current date
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Time current time
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Timestamp current timestamp
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Instant current_instant
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] basicType@3(java.lang.Long,-5)|basicType@15(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer day(DATE arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Boolean every(BOOLEAN predicate)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] Integer length(STRING_OR_CLOB arg)
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] LocalDate local date
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] LocalDateTime local datetime
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] LocalTime local time
[2023-02-16 16:56:56] [ DEBUG] [HQL_FUNCTIONS:187] OffsetDateTime offset datetime
[2023-02-16 16:56:56] [ DEBUG] [TypeConfiguration$Scope:171] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3f0ce0d1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3f6f9cef]
[2023-02-16 16:56:57] [ DEBUG] [ClassLoaderAccessImpl:60] Not known whether passed class name [com.digitalbooking.backend.entity.Category] is safe
[2023-02-16 16:56:57] [ DEBUG] [ClassLoaderAccessImpl:62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.digitalbooking.backend.entity.Category
[2023-02-16 16:56:57] [ DEBUG] [creation:94] Starting post-init callbacks
[2023-02-16 16:56:57] [ DEBUG] [creation:206] Starting PostInitCallbackEntry : Entity(com.digitalbooking.backend.entity.Category) `staticFetchableList` generator
[2023-02-16 16:56:57] [ DEBUG] [AbstractEntityPersister:4159] Static SQL for entity: com.digitalbooking.backend.entity.Category
[2023-02-16 16:56:57] [ DEBUG] [AbstractEntityPersister:4164]  Version select: select id from categories where id =?
[2023-02-16 16:56:57] [ DEBUG] [AbstractEntityPersister:394]  Insert 0: insert into categories (description, image_url, title, id) values (?, ?, ?, ?)
[2023-02-16 16:56:57] [ DEBUG] [AbstractEntityPersister:394]  Update 0: update categories set description=?, image_url=?, title=? where id=?
[2023-02-16 16:56:57] [ DEBUG] [AbstractEntityPersister:394]  Delete 0: delete from categories where id=?
[2023-02-16 16:56:57] [ DEBUG] [AbstractEntityPersister:4172]  Identity insert: insert into categories (id, description, image_url, title) values (default, ?, ?, ?)
[2023-02-16 16:56:57] [ DEBUG] [create:34] Created new SQL alias : c1_0
[2023-02-16 16:56:57] [ DEBUG] [create:55] Registration of TableGroup [StandardTableGroup(com.digitalbooking.backend.entity.Category)] with identifierForTableGroup [com.digitalbooking.backend.entity.Category] for NavigablePath [com.digitalbooking.backend.entity.Category] 
[2023-02-16 16:56:57] [ DEBUG] [AST:69] DomainResult Graph:
 \-EntityResultImpl [com.digitalbooking.backend.entity.Category]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.description]
 |  +-BasicFetch [com.digitalbooking.backend.entity.Category.imageUrl]
 |  \-BasicFetch [com.digitalbooking.backend.entity.Category.title]

[2023-02-16 16:56:57] [ DEBUG] [tree:47] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : com.digitalbooking.backend.entity.Category) {
          primaryTableReference : categories as c1_0
        }
      }
    }

[2023-02-16 16:56:57] [ DEBUG] [NamedObjectRepository:217] Checking 0 named HQL queries
[2023-02-16 16:56:57] [ DEBUG] [NamedObjectRepository:234] Checking 0 named SQL queries
[2023-02-16 16:56:57] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:56:57] [ DEBUG] [SQL:128] create table categories (id bigint generated by default as identity, description varchar(255), image_url varchar(255), title varchar(255), primary key (id))
[2023-02-16 16:56:57] [ INFO ] [JtaPlatformInitiator:51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2023-02-16 16:56:57] [ DEBUG] [SessionFactoryServiceRegistryImpl:91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[2023-02-16 16:56:57] [ DEBUG] [EntityCopyObserverFactoryInitiator:39] Configured EntityCopyObserver strategy: disallow
[2023-02-16 16:56:58] [ DEBUG] [SessionFactoryRegistry:52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@66abb2fa
[2023-02-16 16:56:58] [ DEBUG] [SessionFactoryRegistry:74] Registering SessionFactory: 53791f09-3b0f-42b2-a54c-c43d9f700a00 (<unnamed>)
[2023-02-16 16:56:58] [ DEBUG] [SessionFactoryRegistry:81] Not binding SessionFactory to JNDI, no JNDI name configured
[2023-02-16 16:56:58] [ DEBUG] [SessionFactoryImpl:770] HHH000031: Closing
[2023-02-16 16:56:58] [ INFO ] [SchemaDropperImpl$DelayedDropActionImpl:585] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
[2023-02-16 16:56:58] [ DEBUG] [SQL:128] drop table if exists categories cascade 
[2023-02-16 16:56:58] [ DEBUG] [TypeConfiguration$Scope:474] Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e055ce1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3f6f9cef]
[2023-02-16 16:56:58] [ DEBUG] [AbstractServiceRegistryImpl:403] Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2023-02-16 16:56:58] [ DEBUG] [BootstrapServiceRegistryImpl:296] Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
